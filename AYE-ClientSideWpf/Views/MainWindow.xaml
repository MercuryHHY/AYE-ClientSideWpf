<hc:Window x:Class="AYE_ClientSideWpf.Views.MainWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:ext="clr-namespace:AYE_ClientSideWpf.Extensions"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
           xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:prism="http://prismlibrary.com/" 
           Title="{Binding Title}"
           Width="800"
           Height="450"
           prism:ViewModelLocator.AutoWireViewModel="True"
           ShowTitle="True"
           Style="{StaticResource MaterialDesignWindow}"
           WindowStartupLocation="CenterScreen"
           mc:Ignorable="d">
    <hc:Window.NonClientAreaContent>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel Height="29">
                <Menu HorizontalAlignment="Left">
                    <MenuItem Header="Header1">
                        <MenuItem Header="Header1" />
                        <MenuItem Header="Header2" />
                    </MenuItem>
                    <MenuItem Header="Header2">
                        <MenuItem Header="Header1" />
                        <MenuItem Header="Header2" />
                    </MenuItem>
                </Menu>
            </StackPanel>
            <Button Name="ButtonConfig"
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    hc:IconElement.Geometry="{StaticResource ConfigGeometry}"
                    Click="ButtonConfig_OnClick"
                    Foreground="{DynamicResource PrimaryTextBrush}"
                    Style="{StaticResource ButtonIcon}" />
            <Popup Name="PopupConfig"
                   Grid.Column="1"
                   AllowsTransparency="True"
                   HorizontalOffset="-35"
                   PlacementTarget="{Binding ElementName=ButtonConfig}"
                   StaysOpen="False"
                   VerticalOffset="6">
                <Border Margin="16"
                        Background="{DynamicResource SecondaryRegionBrush}"
                        CornerRadius="4"
                        Effect="{StaticResource EffectShadow2}">
                    <StackPanel Button.Click="ButtonSkins_OnClick">
                        <hc:Divider Width="200" Margin="0,10" Content="Application Theme" />
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <Button Style="{StaticResource ButtonCustom}" Tag="{x:Static hc:ApplicationTheme.Light}">
                                <Border Width="32"
                                        Height="21"
                                        Background="White"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="2" />
                            </Button>
                            <Button Margin="10,0,0,0" Style="{StaticResource ButtonCustom}" Tag="{x:Static hc:ApplicationTheme.Dark}">
                                <Border Width="32"
                                        Height="21"
                                        Background="Black"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="2" />
                            </Button>
                        </StackPanel>

                        <hc:Divider Width="200" Margin="0,10" Content="Accent Color" />
                        <StackPanel Margin="0,0,0,10" HorizontalAlignment="Center" Orientation="Horizontal">
                            <Button Style="{StaticResource ButtonCustom}" Tag="{Binding ElementName=primaryBorder, Path=Background}">
                                <Border Name="primaryBorder"
                                        Width="32"
                                        Height="21"
                                        Background="#2196F3"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="2" />
                            </Button>
                            <Button Margin="10,0,0,0" Style="{StaticResource ButtonCustom}" Tag="{Binding ElementName=warningBorder, Path=Background}">
                                <Border Name="warningBorder"
                                        Width="32"
                                        Height="21"
                                        Background="{DynamicResource WarningBrush}"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="2" />
                            </Button>
                            <Button Margin="10,0,0,0" Style="{StaticResource ButtonCustom}" Tag="{Binding ElementName=violetBorder, Path=Background}">
                                <Border Name="violetBorder"
                                        Width="32"
                                        Height="21"
                                        Background="#9C27B0"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="2" />
                            </Button>
                            <Button Margin="10,0,0,0" Style="{StaticResource ButtonCustom}" Tag="{Binding ElementName=successBorder, Path=Background}">
                                <Border Name="successBorder"
                                        Width="32"
                                        Height="21"
                                        Background="{DynamicResource SuccessBrush}"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="2" />
                            </Button>
                        </StackPanel>
                        <Button Margin="10"
                                HorizontalAlignment="Stretch"
                                Content="More Colors"
                                Tag="Picker" />
                    </StackPanel>
                </Border>
            </Popup>
        </Grid>
    </hc:Window.NonClientAreaContent>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>



            <materialDesign:BooleanToVisibilityConverter x:Key="InverseBoolToVisConverter" FalseValue="Visible" TrueValue="Collapsed" />
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <materialDesign:DialogHost x:Name="DialogHost" DialogTheme="Inherit" Identifier="Root">
            <materialDesign:DrawerHost x:Name="drawerHost" IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
                <materialDesign:DrawerHost.LeftDrawerContent>
                    <DockPanel MinWidth="220">
                        <StackPanel Margin="0,20" DockPanel.Dock="Top">
                            <Image Width="50" Height="50" Source="/Images/user.jpg">
                                <Image.Clip>
                                    <EllipseGeometry Center="25,25" RadiusX="25" RadiusY="25" />
                                </Image.Clip>
                            </Image>
                            <TextBlock Margin="0,10" HorizontalAlignment="Center" Text="{Binding UserName}" />
                        </StackPanel>

                        <ListBox x:Name="menuBar" ItemContainerStyle="{StaticResource MyListBoxItemStyle}" ItemsSource="{Binding MenuBars}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding NavigateCommand}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Background="Transparent" Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="15,0" Kind="{Binding Icon}" />
                                        <TextBlock Margin="10,0" Text="{Binding Title}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>

                    </DockPanel>
                </materialDesign:DrawerHost.LeftDrawerContent>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <materialDesign:Snackbar x:Name="Snackbar" Panel.ZIndex="1" MessageQueue="{materialDesign:MessageQueue}" />
                    <materialDesign:ColorZone x:Name="ColorZone"
                                              Padding="16"
                                              DockPanel.Dock="Top"
                                              Mode="PrimaryMid">
                        <DockPanel LastChildFill="True">
                            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                <Button x:Name="btnMin" Content="—" Style="{StaticResource MaterialDesignFlatMidBgButton}" />
                                <Button x:Name="btnMax" Content="☐" Style="{StaticResource MaterialDesignFlatMidBgButton}" />
                                <Button x:Name="btnClose" Content="✕" Style="{StaticResource MaterialDesignFlatMidBgButton}" />
                            </StackPanel>

                            <materialDesign:PopupBox DockPanel.Dock="Right">
                                <materialDesign:PopupBox.ToggleContent>
                                    <Image Width="25" Height="25" Source="/Images/user.jpg">
                                        <Image.Clip>
                                            <EllipseGeometry Center="12.5,12.5" RadiusX="12.5" RadiusY="12.5" />
                                        </Image.Clip>
                                    </Image>
                                </materialDesign:PopupBox.ToggleContent>

                                <StackPanel>
                                    <!--<Button Command="{Binding AppCenterCommand}" Content="个人中心"/>-->
                                    <Button Command="{Binding LoginOutCommand}" Content="注销当前账户" />
                                </StackPanel>
                            </materialDesign:PopupBox>



                            <StackPanel Orientation="Horizontal">
                                <ToggleButton x:Name="MenuToggleButton"
                                              AutomationProperties.Name="HamburgerToggleButton"
                                              IsChecked="False"
                                              Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                                <Button Margin="24,0,0,0"
                                        materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                                        Command="{Binding GoBackCommand}"
                                        Content="{materialDesign:PackIcon Kind=ArrowLeft,
                                                                          Size=24}"
                                        Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                        Style="{DynamicResource MaterialDesignToolButton}"
                                        ToolTip="Previous Item" />

                                <Button Margin="16,0,0,0"
                                        materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                                        Command="{Binding GoForwardCommand}"
                                        Content="{materialDesign:PackIcon Kind=ArrowRight,
                                                                          Size=24}"
                                        Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                        Style="{DynamicResource MaterialDesignToolButton}"
                                        ToolTip="Next Item" />

                                <TextBlock Margin="16,0"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           AutomationProperties.Name="Material Design In XAML Toolkit"
                                           FontSize="22"
                                           Text="笔记本" />

                                <TextBlock Margin="16,0"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           AutomationProperties.Name="Material Design In XAML Toolkit"
                                           FontSize="22"
                                           Text="阿烨的Demo运行程序" />

                            </StackPanel>
                        </DockPanel>
                    </materialDesign:ColorZone>

                    <ContentControl Grid.Row="1" prism:RegionManager.RegionName="{x:Static ext:PrismManager.MainViewRegionName}" />
                </Grid>
            </materialDesign:DrawerHost>
        </materialDesign:DialogHost>

        <!-- <ContentControl prism:RegionManager.RegionName="ContentRegion" /> -->
    </Grid>
</hc:Window>
